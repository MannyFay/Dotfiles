#------------------------------------------------------------------------------
#  Alfred Git Cheat Sheet
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
#----- Working Tree

# List Git commands (git)
glc

# Show status of worktree (git status)
gs

# Clone remote repository (git clone <remote-url>)
gc <url>

# Restore all changed files in working tree (git restore .)
gra

# Restore a changed file in working tree (git restore <file>)
grf <file>

# Show commit history (git log)
gl



#------------------------------------------------------------------------------
#----- Branching

# Show all Git branches inclusively remote repository (quit with q) (git branch -a)
gbsa

# Show local branches (quit with q) (git branch)
gbsl

# Checkout a local Git branch (git checkout <branch>)
gbcl <branch>

# Checkout a Git branch from remote repository (git checkout --track <remote/branch>)
gbcr <remote/branch>

# Checkout a new local Git branch (git checkout -b <branch>)
gbcn <branch>

# Delete Git branch locally (git restore . && git checkout develop && git branch -D)
gbdl <branch>

# Delete Git branch on remote repository (git push --delete <remote/branch>)
gbdr <remote/branch>

# Checkout develop branch (git checkout develop)
gcd

# Checkout main branch (git checkout main)
gcm


#------------------------------------------------------------------------------
#----- Indexing

# Stage file(s) into index (git add <file(s)>)
gisf <file(s)>

# Stage parts of file into index (git add -p <file>)
gisp <file>

# Stage all changed files to index (git add .)
gisa

# Unstage file in Git index (git restore --staged <file(s)>)
giuf

# Unstage parts of file in Git index (git restore -p <file>)
giup

# Unstage all files in Git index (git restore --staged .)
giua



#------------------------------------------------------------------------------
#----- Committing

# Set initial commit (git commit --allow-empty -m "INITIAL COMMIT")
gci

# Commit all staged files in index (git commit)
gcc

# Commit all staged files in index with a short message (git commit -m <message>)
gcm

# Commit all staged files in index with message 'Work In Progress' (git commit -m "WIP")
gcwip

# Change last commit message in index or add file(s) (git commit --amend (<file>))
gccl

# Revert last commit in index (git reset --hard HEAD~1)
gcrl

# Stage all changed files and commit them with <message> (git add . && git commit -m <message>)
gisacm

# Stage all changed files and commit them with WIP status (git add . && git commit -m "WIP")
gisacwip

# Stage all changed and commit them with 'Update' (git add . && git commit -m "Update")
gisacupdate



#------------------------------------------------------------------------------
#----- Comparing

# Show differences of file between working tree and index (git diff <file>)
gdf

# Show differences between working tree and index for all files
gitalizer



#------------------------------------------------------------------------------
#----- Fetching

# Fetch actual branch from remote repository (git fetch)
gf

# Fetch all branches from remote repository (git fetch --all)
gfo



#------------------------------------------------------------------------------
#----- Pulling

# Pull main branch from origin/main (git pull origin main)
gpm

# Pull develop branch from origin/develop (git pull origin develop)
gpd

# Pull and fetch actual branch from remote repository
gpull



#------------------------------------------------------------------------------
#----- Pushing

# Pull actual branch from remote repository, then push
gpp

# Push actual branch to remote repository (git push)
gpush

# Revert last push to Git remote repository (git revert <hash>)
gpr

# Stage all changed files to Git index, commit with 'WIP' status and push (git add . && git commit -m "WIP" && git push)
ggo



#------------------------------------------------------------------------------
#----- Stashing

# Stash changes on actual Git branch (git stash)
gsc

# Pop stashed changes on actual Git branch (git stash pop)
gsp

