#------------------------------------------------------------------------------
#--- AeroSpace Tiling Window Manager Configuration
#--- https://nikitabobko.github.io/AeroSpace/guide#default-config
#--- https://github.com/i3/i3/blob/next/etc/config
#------------------------------------------------------------------------------

# This configuration file has to be symlinked to:
# ~/.config/aerospace/aerospace.toml

# Activate Settings > Desktop & Dock > Mission Control > Group windows by application

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []


# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# https://nikitabobko.github.io/AeroSpace/goodness#show-aerospace-workspaces-in-sketchybar
after-startup-command = ['exec-and-forget sketchybar']
# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]


#------------------------------------------------------------------------------
# Settings

# Start AeroSpace at login:
start-at-login = true



#--- Normalizations:
# See: https://nikitabobko.github.io/AeroSpace/guide#normalization
# Root container can have a single child:
enable-normalization-flatten-containers = true
# Nesting strategy for containers:
enable-normalization-opposite-orientation-for-nested-containers = true

#--- 'accordion-padding' (0 to disable the padding feature):
# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'vertical'

# Mouse follows focus when focused monitor changes:
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Mouse follows focus when focused window changes:
on-focus-changed = "move-mouse window-lazy-center"

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false

#--- Keyboard Layout (possible values: qwerty, dvorak):
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'


#------------------------------------------------------------------------------
# Window Gaps:
# See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors

[gaps]
inner.horizontal = 0
inner.vertical   = 0
outer.left       = 0
outer.bottom     = 15
outer.top        = 0
outer.right      = 0



#------------------------------------------------------------------------------
#--- Settings

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# alt-slash = 'layout tiles horizontal vertical'
# alt-comma = 'layout accordion horizontal vertical'


#------------------------------------------------------------------------------
# Window Management

#--- Change window focus:
alt-cmd-h = 'focus left'
alt-cmd-j = 'focus down'
alt-cmd-k = 'focus up'
alt-cmd-l = 'focus right'

#--- Swap windows:
cmd-shift-h = 'move left'
cmd-shift-j = 'move down'
cmd-shift-k = 'move up'
cmd-shift-l = 'move right'

#--- Resizing:
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'


#------------------------------------------------------------------------------
# Workspace Management

# Move between focused and previously focused workspace back and forth:
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'

# Move workspace to another monitor:
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Jumping between workspaces:
alt-ctrl-cmd-1 = 'workspace 1'
alt-ctrl-cmd-2 = 'workspace 2'
alt-ctrl-cmd-3 = 'workspace 3'
alt-ctrl-cmd-4 = 'workspace 4'
alt-ctrl-cmd-5 = 'workspace 5'
alt-ctrl-cmd-6 = 'workspace 6'
alt-ctrl-cmd-7 = 'workspace 7'
alt-ctrl-cmd-8 = 'workspace 8'
alt-ctrl-cmd-9 = 'workspace 9'
alt-ctrl-cmd-0 = 'workspace 10'

# alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
# alt-b = 'workspace B'
# Jump to Chrome browser:
alt-ctrl-cmd-c = 'workspace C'
# alt-d = 'workspace D'
# alt-e = 'workspace E'
# Jump to Firefox Developer Edition browser:
alt-ctrl-cmd-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
# Jump to Apple Music:
alt-ctrl-cmd-m = 'workspace M'
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# Jump to Safari browser:
alt-ctrl-cmd-s = 'workspace S'
# Jump to Terminal:
alt-ctrl-cmd-t = 'workspace T'
# alt-u = 'workspace U'
# alt-v = 'workspace V'
# alt-w = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# alt-shift-1 = 'move-node-to-workspace 1'
# alt-shift-2 = 'move-node-to-workspace 2'
# alt-shift-3 = 'move-node-to-workspace 3'
# alt-shift-4 = 'move-node-to-workspace 4'
# alt-shift-5 = 'move-node-to-workspace 5'
# alt-shift-6 = 'move-node-to-workspace 6'
# alt-shift-7 = 'move-node-to-workspace 7'
# alt-shift-8 = 'move-node-to-workspace 8'
# alt-shift-9 = 'move-node-to-workspace 9'
# alt-shift-a = 'move-node-to-workspace A'
# alt-shift-b = 'move-node-to-workspace B'
# alt-shift-c = 'move-node-to-workspace C'
# alt-shift-d = 'move-node-to-workspace D'
# alt-shift-e = 'move-node-to-workspace E'
# alt-shift-f = 'move-node-to-workspace F'
# alt-shift-g = 'move-node-to-workspace G'
# alt-shift-i = 'move-node-to-workspace I'
# alt-shift-m = 'move-node-to-workspace M'
# alt-shift-n = 'move-node-to-workspace N'
# alt-shift-o = 'move-node-to-workspace O'
# alt-shift-p = 'move-node-to-workspace P'
# alt-shift-q = 'move-node-to-workspace Q'
# alt-shift-r = 'move-node-to-workspace R'
# alt-shift-s = 'move-node-to-workspace S'
# alt-shift-t = 'move-node-to-workspace T'
# alt-shift-u = 'move-node-to-workspace U'
# alt-shift-v = 'move-node-to-workspace V'
# alt-shift-w = 'move-node-to-workspace W'
# alt-shift-x = 'move-node-to-workspace X'
# alt-shift-y = 'move-node-to-workspace Y'
# alt-shift-z = 'move-node-to-workspace Z'


# See: https://nikitabobko.github.io/AeroSpace/commands#mode
# alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# [mode.service.binding]
# esc = ['reload-config', 'mode main']
# r = ['flatten-workspace-tree', 'mode main'] # reset layout
# f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']
# alt-shift-h = ['join-with left', 'mode main']
# alt-shift-j = ['join-with down', 'mode main']
# alt-shift-k = ['join-with up', 'mode main']
# alt-shift-l = ['join-with right', 'mode main']


#------------------------------------------------------------------------------
# App Specific Workspace Mounts

# Nordpass:
[[on-window-detected]]
if.app-id = 'com.nordsec.nordpass'
run = "move-node-to-workspace 1"

# Finder
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = "move-node-to-workspace 2"

# Mail
[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = "move-node-to-workspace 3"

# Reminders
[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = "move-node-to-workspace 4"

# Calendar
[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = "move-node-to-workspace 5"

# Notes
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = "move-node-to-workspace 6"

# Apple Music
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = "move-node-to-workspace M"

# Terminal
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace T"

# Safari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = "move-node-to-workspace S"

# Chrome
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = "move-node-to-workspace C"

# Firefox Developer Edition
[[on-window-detected]]
if.app-id = 'org.mozilla.firefoxdeveloperedition'
run = "move-node-to-workspace F"

